interface Node {
  id: ID!
}

type Article implements Node {
  id: ID!
  title: String!
  content: String!
  comments(first: Int, after: String, last: Int, before: String): ArticleCommentConnection!
}

type ArticleEdge {
  cursor: String!
  node: Article!
}

type ArticleConnection {
  nodes: [Article!]!
  edges: [ArticleEdge!]!
  pageInfo: PageInfo!
}

type ArticleComment implements Node {
  id: ID!
  author: User!
  content: String!
}

type ArticleCommentEdge {
  cursor: String!
  node: ArticleComment!
}

type ArticleCommentConnection {
  nodes: [ArticleComment!]!
  edges: [ArticleCommentEdge!]!
  pageInfo: PageInfo!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Image {
  url: String!
  width: Int!
  height: Int!
}

type User implements Node {
  id: ID!
  name: String!
  avatar: Image!
}

type Viewer {
  user: User!
}

type Query {
  latestArticles(first: Int, after: String, last: Int, before: String): ArticleConnection!
  popularArticles(first: Int, after: String, last: Int, before: String): ArticleConnection!
  node(id: ID!): Node
  viewer: Viewer
}
